import React, { Component } from 'react';

export default class App extends Component {
  state = {
    ename: 'Nanda',
    products: [],
  };

  componentDidMount() {
    fetch("https://jsonplaceholder.typicode.com/users")
      .then((res) => res.json())
      .then((data) => this.setState({ products: data }))
      .catch((err) => console.log(err));
  }

  render() {
    return (
      <>
        <center>
          {/* Passing ename to the Display component */}

          {/* Mapping over the products array */}
          <ul>
            {this.state.products.map((product) => (
              <li key={product.id}>{product.name}</li> // Using "name" instead of "title"
            ))}
          </ul>

          <h1>Hello {this.state.ename}</h1>
          <br />

          {/* Button to change ename */}
          <button onClick={() => this.setState({ ename: 'Kumar' })}>
            Change Name
          </button>
        </center>
      </>
    );
  }
}
//////////////////////////////////////////////////////////////
use Reducer()

import React, { useReducer } from "react";

const initialState = { count: 0 };

function reducer(state, action) {
  switch (action.type) { // Fixed typo "action,type" to "action.type"
    case "increment":
      return { count: state.count + 1 };
    case "decrement":
      return { count: state.count - 1 };
    default:
      throw new Error("Unknown action type"); // Improved error message
  }
}

function App() {
  const [state, dispatch] = useReducer(reducer, initialState); // Fixed "intialstate" to "initialState"
  
  return (
    <center>
      <div>Count: {state.count}</div>
      <button onClick={() => dispatch({ type: "decrement" })}>-</button>
      <button onClick={() => dispatch({ type: "increment" })}>+</button>
    </center>
  );
}

export default App;
==========================
